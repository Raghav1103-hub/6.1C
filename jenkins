pipeline {
    agent any

    environment {
        RECIPIENT_EMAIL = 'singlaraghav158@gmail.com'
        MAVEN_HOME = tool name: 'Maven 3.x', type: 'maven'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Stage 1: Building the code'
                echo 'Details: Compiling and packaging the application using Maven.'
                sh "${MAVEN_HOME}/bin/mvn clean package"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Stage 2: Running Unit and Integration Tests'
                echo 'Details: Running unit tests using JUnit and integration tests to ensure the components work together.'
                sh "${MAVEN_HOME}/bin/mvn test"
            }
            post {
                success {
                    emailext(
                        attachLog: true,
                        to: RECIPIENT_EMAIL,
                        subject: 'Unit and Integration Tests: Success',
                        body: 'Stage 2 passed successfully. Check the attached logs for details.'
                    )
                }
                failure {
                    emailext(
                        attachLog: true,
                        to: RECIPIENT_EMAIL,
                        subject: 'Unit and Integration Tests: Failure',
                        body: 'Stage 2 failed. Check the attached logs for more information.'
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Stage 3: Analyzing Code Quality'
                echo 'Details: Performing code quality analysis using SonarQube.'
                withSonarQubeEnv('SonarQube') {
                    sh "${MAVEN_HOME}/bin/mvn sonar:sonar"
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Stage 4: Performing Security Scan'
                echo 'Details: Scanning for vulnerabilities using OWASP Dependency-Check.'
                sh "${MAVEN_HOME}/bin/mvn org.owasp:dependency-check-maven:check"
            }
            post {
                success {
                    emailext(
                        attachLog: true,
                        to: RECIPIENT_EMAIL,
                        subject: 'Security Scan: Success',
                        body: 'Stage 4 completed successfully. Logs attached for reference.'
                    )
                }
                failure {
                    emailext(
                        attachLog: true,
                        to: RECIPIENT_EMAIL,
                        subject: 'Security Scan: Failure',
                        body: 'Stage 4 failed. Check the attached logs for details.'
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Stage 5: Deploying to Staging'
                echo 'Details: Deploying the application to the staging environment (AWS EC2).'
                // Add your deployment script for staging here
                sh 'deploy_to_staging.sh'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Stage 6: Running Integration Tests in Staging'
                echo 'Details: Running integration tests in the staging environment.'
                // Add your staging test commands here
                sh 'run_staging_tests.sh'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Stage 7: Deploying to Production'
                echo 'Details: Deploying the application to the production environment (AWS EC2).'
                // Add your production deployment script here
                sh 'deploy_to_production.sh'
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}
